#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import os
from pathlib import Path

from wildfires.utils import handle_array_job_args

try:
    # This will only work after the path modification carried out in the job script.
    from specific import (
        CACHE_DIR,
        SimpleCache,
        get_model,
        data_split_cache,
        get_shap_values,
    )
except ImportError:
    """Not running as an HPC job yet."""


def func():
    # Used to re-compute specific failed jobs, `None` otherwise.
    indices = [
        2,
        3,
        6,
        7,
        14,
        15,
        16,
        17,
        19,
        21,
        22,
        28,
        29,
        35,
        36,
        52,
        53,
        54,
        55,
        59,
        60,
        61,
        62,
        68,
        69,
        70,
        71,
        72,
        73,
        76,
        81,
        82,
        83,
        84,
        94,
        98,
        99,
        100,
        101,
        102,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        111,
        112,
        113,
        114,
        115,
        116,
        117,
        118,
        119,
        123,
        124,
        125,
        129,
        130,
        132,
        133,
        134,
        135,
        141,
        142,
        155,
        156,
        170,
        171,
        172,
        173,
        175,
        176,
        177,
        178,
        183,
        184,
        185,
        186,
        188,
        189,
        196,
        201,
        202,
        203,
        204,
        220,
        221,
        222,
        223,
        224,
        225,
        226,
        227,
        228,
        229,
        230,
        231,
        232,
        235,
        236,
        237,
        238,
        239,
        240,
        241,
        245,
        246,
        252,
        254,
        255,
        257,
        258,
        261,
        262,
        263,
        264,
        266,
        267,
        276,
        277,
        311,
        312,
        313,
        314,
        316,
        319,
        320,
        321,
        327,
        328,
        329,
        330,
        331,
        332,
        338,
        341,
        342,
        343,
        344,
        369,
        372,
        373,
        374,
        375,
        376,
        377,
        378,
        379,
        380,
        381,
        382,
        383,
        384,
        385,
        386,
        387,
        388,
        393,
        395,
        396,
        401,
        402,
        409,
        410,
        411,
        412,
        413,
        414,
        422,
        423,
        437,
        438,
        439,
        440,
        441,
        444,
        445,
        447,
        453,
        454,
        455,
        456,
        457,
        459,
        462,
        470,
        471,
        472,
        473,
        508,
        509,
        510,
        511,
        512,
        513,
        514,
        515,
        516,
        519,
        520,
        521,
        522,
        523,
        524,
        525,
        526,
        527,
        528,
        535,
        536,
        537,
        539,
        540,
        543,
        544,
        545,
        546,
        548,
        549,
    ]

    index = int(os.environ["PBS_ARRAY_INDEX"])

    if indices is not None:
        index = indices[index]

    print("Index:", index)

    X_train, X_test, y_train, y_test = data_split_cache.load()
    rf = get_model()

    job_samples = 50

    tree_path_dependent_shap_interact_cache = SimpleCache(
        f"tree_path_dependent_shap_interact_{index}_{job_samples}",
        cache_dir=os.path.join(CACHE_DIR, "shap_interaction"),
    )

    @tree_path_dependent_shap_interact_cache
    def cached_get_interact_shap_values(model, X):
        return get_shap_values(model, X, interaction=True)

    cached_get_interact_shap_values(
        rf, X_train[index * job_samples : (index + 1) * job_samples]
    )


if __name__ == "__main__":
    handle_array_job_args(
        Path(__file__).resolve(),
        func,
        ncpus=1,
        mem="7gb",
        walltime="11:00:00",
        max_index=221,
    )
